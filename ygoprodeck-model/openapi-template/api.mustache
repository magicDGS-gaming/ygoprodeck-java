package {{package}};

import {{invokerPackage}}.EncodingUtils;

{{#imports}}import {{import}};
{{/imports}}

{{^fullJavaUtil}}
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
{{/fullJavaUtil}}

{{>generatedAnnotation}}
public final class {{classname}} {

    private {{classname}}() {
        // cannot be instantiated
    }

{{#operations}}{{#operation}}

    {{#hasQueryParams}}
    /**
    * A convenience class for generating query parameters for the
    * <code>{{operationId}}</code> method in a fluent style.
    */
    public static class {{operationIdCamelCase}}QueryParams extends HashMap<String, Object> {
        {{#queryParams}}

        /**
        * Set the {{paramName}} query parameter.
        *
        * @param value {{description}}{{#required}} (required){{/required}}{{^required}} (optional{{^isContainer}}{{#defaultValue}}, default to {{.}}{{/defaultValue}}{{/isContainer}}){{/required}}
        */
        public {{operationIdCamelCase}}QueryParams {{paramName}}(final {{{dataType}}} value) {
        {{#collectionFormat}}
            put("{{baseName}}", EncodingUtils.encodeCollection(value, "{{collectionFormat}}"));
        {{/collectionFormat}}
        {{^collectionFormat}}
            put("{{baseName}}", EncodingUtils.encode(value));
        {{/collectionFormat}}
            return this;
        }
        {{/queryParams}}
        }
        {{/hasQueryParams}}
{{/operation}}{{/operations}}
}
